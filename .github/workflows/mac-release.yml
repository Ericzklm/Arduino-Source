name: SerialPrograms MacOS Release

on:
  push:
    tags:
      # Start MacOS release flow when a new version tag is created
      - 'v*'
  workflow_dispatch:
    # Manual release / testing
    inputs:
      version:
        description: 'Version for the manual release'
        required: true
      jobs:
        description: 'Number of parallel jobs to build with'
        default: 1
        type: number
      qt_version:
        description: 'Qt version to use'
        required: true
        default: '6.8.2'
        type: choice
        options:
          - '6.8.2'
          - '6.5.3'
      runner:
        description: "MacOS Runner"
        required: true
        default: "macos-15"
        type: choice
        options:
          - "macos-15"
          - "macos-13"
 

jobs:
  build:
    # Intel Macs may need macos-13 runner, this is only handling Apple Silicon
    # TODO: Test forwards compatibility with macos-14, this is likely not backwards compatible
    runs-on: ${{ github.event.inputs.runner }}
    steps:
      - name: Checkout Arduino-Source
        uses: actions/checkout@v4

      - name: Checkout Packages
        uses: actions/checkout@v4
        with:
          repository: 'PokemonAutomation/Packages'
          path: Packages

      # MacOS runners have Homebrew, Xcode, and Cmake already installed
      - name: Install Dependencies
        run: | 
          brew install tesseract
          brew install tesseract-lang
          brew install opencv

      - uses: jurplel/install-qt-action@v4
        with:
          version: ${{ github.event.inputs.qt_version }}
          modules: 'qtmultimedia qtserialport'

      - name: Set release configuration for Cmake build
        run: cmake SerialPrograms -DUNIX_LINK_TESSERACT:BOOL=true -DCMAKE_BUILD_TYPE:STRING=Release

      # macos-15 runner should have 3 cores
      - name: Build SerialPrograms.app
        run: cmake --build . -j ${{ github.event.inputs.jobs }}

      - name: rpath resolution
        run: |
          BREW_PREFIX=$(brew --prefix)
          QT_VERSION=$(basename $(find $BREW_PREFIX/Cellar/qt -maxdepth 1 -type d | sort -V | tail -n 1))
          brew info qt
          find $BREW_PREFIX -name "QtGui.framework"
          otool -L SerialPrograms.app/Contents/MacOS/SerialPrograms
          install_name_tool -add_rpath "@executable_path/../Frameworks" SerialPrograms.app/Contents/MacOS/SerialPrograms
          mkdir SerialPrograms.app/Contents/Frameworks
          cp $BREW_PREFIX/Cellar/protobuf/29.3/lib/libutf8_validity.dylib SerialPrograms.app/Contents/Frameworks
          cp $BREW_PREFIX/Cellar/webp/1.5.0/lib/libsharpyuv.0.dylib SerialPrograms.app/Contents/Frameworks
          cp $BREW_PREFIX/Cellar/jpeg-xl/0.11.1/lib/libjxl_cms.0.11.dylib SerialPrograms.app/Contents/Frameworks
          cp $BREW_PREFIX/Cellar/vtk/9.4.1_2/lib/libvtkCommonComputationalGeometry-9.4.1.dylib SerialPrograms.app/Contents/Frameworks
          cp $BREW_PREFIX/Cellar/vtk/9.4.1_2/lib/libvtkFiltersVerdict-9.4.1.dylib SerialPrograms.app/Contents/Frameworks
          cp $BREW_PREFIX/Cellar/vtk/9.4.1_2/lib/libvtkfmt-9.4.1.dylib SerialPrograms.app/Contents/Frameworks
          cp $BREW_PREFIX/Cellar/vtk/9.4.1_2/lib/libvtkFiltersGeometry-9.4.1.dylib SerialPrograms.app/Contents/Frameworks
          cp $BREW_PREFIX/Cellar/vtk/9.4.1_2/lib/libvtkFiltersCore-9.4.1.dylib SerialPrograms.app/Contents/Frameworks
          cp $BREW_PREFIX/Cellar/vtk/9.4.1_2/lib/libvtkCommonCore-9.4.1.dylib SerialPrograms.app/Contents/Frameworks
          cd $GITHUB_WORKSPACE
          
      # Use macdeployqt to bundle the app with dependencies
      # Some libraries are not discovered for some reason, copy them in manually
      - name: Run macdeployqt
        run: |
          BREW_PREFIX=$(brew --prefix)
          macdeployqt SerialPrograms.app -verbose=3
      # cp $BREW_PREFIX/opt/gcc/lib/gcc/current/libgcc_s.1.1.dylib SerialPrograms.app/Contents/Frameworks
      # cp $BREW_PREFIX/Cellar/protobuf/29.3/lib/libutf8_validity.dylib SerialPrograms.app/Contents/Frameworks

      # - name: Checkout macdeployqtfix
      #   uses: actions/checkout@v4
      #   with:
      #     repository: 'arl/macdeployqtfix'
      #     path: macdeployqtfix

      # - name: Run macdeployqt
      #   run: |
      #     BREW_PREFIX=$(brew --prefix)
      #     cp macdeployqtfix/macdeployqtfix.py $GITHUB_WORKSPACE/macdeployqtfix.py
      #     chmod +x macdeployqtfix.py
      #     python macdeployqtfix.py SerialPrograms.app $BREW_PREFIX/Cellar/qt/${{ github.event.inputs.qt_version }}

      # Dummy codesign
      - name: Codesign
        run: codesign --force --deep --sign - SerialPrograms.app

      # Read-write format in case Resources needs to be updated
      - name: Create disk image
        run: hdiutil create -volname "SerialPrograms" -format UDRW -srcfolder SerialPrograms.app SerialPrograms.dmg

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: SerialPrograms.dmg
          path: SerialPrograms.dmg

      - name: GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: SerialPrograms.dmg
          # Tag should be automatically set in the case of a tag push
          tag_name: ${{ github.event.inputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
